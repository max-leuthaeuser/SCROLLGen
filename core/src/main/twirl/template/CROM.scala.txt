@(model: crom_l1_composed.Model)

@import generator.CROMGenerator
@import crom_l1_composed.Model
@import crom_l1_composed.Type

@showAttributes(model: Type) = { @generator.CROMGenerator.getAttributes(model).map { attribute =>
        var @(attribute.getName): @(CROMGenerator.getType(attribute)) = _ }}

@showOperations(model: Type) = { @generator.CROMGenerator.getOperations(model).map { operation =>
        def @(operation.getName)@(CROMGenerator.getParameters(operation)): @(CROMGenerator.getType(operation)) = {
            @(operation.getOperation)
        }
    }}

object CROMApplication extends App {
    @generator.CROMGenerator.getDataTypes(model).map { dataType =>
    class @(dataType.getName) @(generator.CROMGenerator.getExtends(dataType)){
        @showAttributes(dataType)
        @showOperations(dataType)
    }
    }
    @generator.CROMGenerator.getNaturalTypes(model).map { naturalType =>
    class @(naturalType.getName) @(generator.CROMGenerator.getExtends(naturalType)){
        @showAttributes(naturalType)
        @showOperations(naturalType)
    }
    }
}